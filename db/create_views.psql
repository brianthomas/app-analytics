
drop view if exists device_process cascade;
create view device_process AS
    select dp.*, p.process_name, p.process_path from
        ( select d.rowid as device_id, d.*, a.process_id from 
            (select * from device_process_assoc) as a
        inner join
            (select * from device_map ) as d
        on 
            a.device_id = d.rowid
        ) as dp
        inner join
        (select * from process_map ) as p
        on
            dp.process_id = p.rowid
;


drop view if exists device_software;
create view device_software AS
    select ds.*, s.software_name, s.install_location from
        ( select d.rowid as device_id, d.*, a.software_id from
            (select * from device_software_assoc) as a
        inner join
            (select * from device_map ) as d
        on
            a.device_id = d.rowid
        ) as ds
        inner join
        (select * from software_map ) as s
        on
            ds.software_id = s.rowid
;


drop view if exists device_process_count;
create view device_process_count AS
    select dpc.process_name, dpc.process_path, cnt.number from
        (select * from device_process ) as dpc 
            inner join
        (select process_name as pn, count (*) as number from device_process group by pn) as cnt 
            on cnt.pn = dpc.process_name
;

create extension fuzzystrmatch;

drop view if exists process_compare;
create view process_compare AS
    select ps.file_name, (ps.location || dp.process_name) as location, dp.number, ps.status, dp.process_name, dp.process_path, levenshtein(ps.location, dp.process_path) as dist, (char_length(ps.location) + char_length(dp.process_path) ) as total_len from
        ( select * from process_status ) as ps
          inner join
        ( select dpc.process_name, dpc.process_path, pc.number from 
            (select *  from device_process ) as dpc
              inner join
            (select process_name, count (*) as number from device_process group by process_name) as pc
            on pc.process_name = dpc.process_name
        ) as dp
        on
            dp.process_name = ps.process_name
;

drop view if exists norm_process_compare;
create view norm_process_compare AS
    select *, ((dist*1.0)/(total_len*1.0)) as ndist from process_compare
;
